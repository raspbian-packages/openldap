#`configure' configures this package to adapt to many kinds of systems.
#
#Usage: ./configure [OPTION]... [VAR=VALUE]...
#
#To assign environment variables (e.g., CC, CFLAGS...), specify them as
#VAR=VALUE.  See below for descriptions of some of the useful variables.
#
#Defaults for the options are specified in brackets.
#
#Configuration:
#  -h, --help              display this help and exit
#      --help=short        display options specific to this package
#      --help=recursive    display the short help of all the included packages
#  -V, --version           display version information and exit
#  -q, --quiet, --silent   do not print `checking ...' messages
#      --cache-file=FILE   cache test results in FILE [disabled]
#  -C, --config-cache      alias for `--cache-file=config.cache'
#  -n, --no-create         do not create output files
#      --srcdir=DIR        find the sources in DIR [configure dir or `..']
#
#Installation directories:
#  --prefix=PREFIX         install architecture-independent files in PREFIX
#                          [/usr/local]
#  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
#                          [PREFIX]
#
#By default, `make install' will install all the files in
#`/usr/local/bin', `/usr/local/lib' etc.  You can specify
#an installation prefix other than `/usr/local' using `--prefix',
#for instance `--prefix=$HOME'.
#
#For better control, use the options below.
#
#Fine tuning of the installation directories:
#  --bindir=DIR            user executables [EPREFIX/bin]
#  --sbindir=DIR           system admin executables [EPREFIX/sbin]
#  --libexecdir=DIR        program executables [EPREFIX/libexec]
--libexecdir='${prefix}/lib'
#  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
#  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
#  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
#  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
#  --libdir=DIR            object code libraries [EPREFIX/lib]
#  --includedir=DIR        C header files [PREFIX/include]
#  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
#  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
#  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
#  --infodir=DIR           info documentation [DATAROOTDIR/info]
#  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
#  --mandir=DIR            man documentation [DATAROOTDIR/man]
#  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
#  --htmldir=DIR           html documentation [DOCDIR]
#  --dvidir=DIR            dvi documentation [DOCDIR]
#  --pdfdir=DIR            pdf documentation [DOCDIR]
#  --psdir=DIR             ps documentation [DOCDIR]
#
#System types:
#  --build=BUILD     configure for building on BUILD [guessed]
#  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
#  --target=TARGET   configure for building compilers for TARGET [HOST]
#
#Optional Features:
#  --disable-option-checking  ignore unrecognized --enable/--with options
#  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
#  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
#  --enable-debug          enable debugging no|yes|traditional [yes]
--enable-debug
#  --enable-dynamic        enable linking built binaries with dynamic libs [auto]
--enable-dynamic
#  --enable-syslog         enable syslog support [auto]
--enable-syslog
#  --enable-ipv6           enable IPv6 support [auto]
--enable-ipv6
#  --enable-local          enable AF_LOCAL (AF_UNIX) socket support [auto]
--enable-local
#
#SLAPD (Standalone LDAP Daemon) Options:
#  --enable-slapd          enable building slapd [yes]
--enable-slapd
#  --enable-dynacl         enable run-time loadable ACL support (experimental) [no]
--enable-dynacl
#  --enable-aci            enable per-object ACIs (experimental) no|yes|mod [no]
--enable-aci
#  --enable-cleartext      enable cleartext passwords [yes]
--enable-cleartext
#  --enable-crypt          enable crypt(3) passwords [no]
--enable-crypt
#  --enable-spasswd        enable (Cyrus) SASL password verification [no]
--enable-spasswd
#  --enable-modules        enable dynamic module support [no]
--enable-modules
#  --enable-rlookups       enable reverse lookups of client hostnames [no]
--enable-rlookups
#  --enable-slapi          enable SLAPI support (experimental) [no]
--enable-slapi
#  --enable-slp            enable SLPv2 support [no]
--disable-slp
#  --enable-wrappers       enable tcp wrapper support [no]
--enable-wrappers
#
#SLAPD Backend Options:
#  --enable-backends       enable all available backends no|yes|mod
--enable-backends=mod
#  --enable-dnssrv         enable dnssrv backend no|yes|mod [no]
#  --enable-ldap           enable ldap backend no|yes|mod [no]
#  --enable-mdb            enable mdb database backend no|yes|mod [yes]
#  --enable-meta           enable metadirectory backend no|yes|mod [no]
#  --enable-asyncmeta      enable asynchronous metadirectory backend no|yes|mod [no]
#  --enable-ndb            enable MySQL NDB Cluster backend no|yes|mod [no]
--disable-ndb
#  --enable-null           enable null backend no|yes|mod [no]
#  --enable-passwd         enable passwd backend no|yes|mod [no]
#  --enable-perl           enable perl backend no|yes|mod [no]
--enable-perl=mod
#  --enable-relay          enable relay backend no|yes|mod [yes]
#  --enable-sock           enable sock backend no|yes|mod [no]
#  --enable-sql            enable sql backend no|yes|mod [no]
--enable-sql=mod
#  --enable-wt             enable WiredTiger backend no|yes|mod [no]
--disable-wt
#
#SLAPD Overlay Options:
#  --enable-overlays       enable all available overlays no|yes|mod
--enable-overlays=mod
#  --enable-accesslog      In-Directory Access Logging overlay no|yes|mod [no]
#  --enable-auditlog       Audit Logging overlay no|yes|mod [no]
#  --enable-autoca         Automatic Certificate Authority overlay no|yes|mod [no]
--disable-autoca
#  --enable-collect        Collect overlay no|yes|mod [no]
#  --enable-constraint     Attribute Constraint overlay no|yes|mod [no]
#  --enable-dds            Dynamic Directory Services overlay no|yes|mod [no]
#  --enable-deref          Dereference overlay no|yes|mod [no]
#  --enable-dyngroup       Dynamic Group overlay no|yes|mod [no]
#  --enable-dynlist        Dynamic List overlay no|yes|mod [no]
#  --enable-homedir        Home Directory Management overlay no|yes|mod [no]
#  --enable-memberof       Reverse Group Membership overlay no|yes|mod [no]
#  --enable-otp            OTP 2-factor authentication overlay no|yes|mod [no]
#  --enable-ppolicy        Password Policy overlay no|yes|mod [no]
#  --enable-proxycache     Proxy Cache overlay no|yes|mod [no]
#  --enable-refint         Referential Integrity overlay no|yes|mod [no]
#  --enable-remoteauth     Deferred Authentication overlay no|yes|mod [no]
#  --enable-retcode        Return Code testing overlay no|yes|mod [no]
#  --enable-rwm            Rewrite/Remap overlay no|yes|mod [no]
#  --enable-seqmod         Sequential Modify overlay no|yes|mod [no]
#  --enable-sssvlv         ServerSideSort/VLV overlay no|yes|mod [no]
#  --enable-syncprov       Syncrepl Provider overlay no|yes|mod [yes]
#  --enable-translucent    Translucent Proxy overlay no|yes|mod [no]
#  --enable-unique         Attribute Uniqueness overlay no|yes|mod [no]
#  --enable-valsort        Value Sorting overlay no|yes|mod [no]
#
#SLAPD Password Module Options:
#  --enable-argon2         Argon2 password hashing module no|yes [no]
--enable-argon2
#
#LLOADD (Load Balancer Daemon) Options:
#  --enable-balancer       enable load balancer no|yes|mod [no]
--disable-balancer
#
#Library Generation & Linking Options
#  --enable-static[=PKGS]  build static libraries [default=yes]
#  --enable-shared[=PKGS]  build shared libraries [default=yes]
#  --enable-versioning     Enable versioned symbols in shared library no|yes|auto [auto]
#  --enable-fast-install[=PKGS]
#                          optimize for fast installation [default=yes]
#  --disable-libtool-lock  avoid locking (might break parallel builds)
#
#Optional Packages:
#  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
#  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
#  --with-subdir=DIR       change default subdirectory used for installs
--with-subdir=ldap
#  --with-cyrus-sasl       with Cyrus SASL support [auto]
--with-cyrus-sasl
#  --with-systemd          with systemd service notification support [auto]
--without-systemd
#  --with-fetch            with fetch(3) URL support [auto]
#  --with-threads          with threads library auto|nt|posix|pth|lwp|manual [auto]
--with-threads
#  --with-tls              with TLS/SSL support auto|openssl|gnutls [auto]
--with-tls=gnutls
#  --with-yielding-select  with implicitly yielding select [auto]
#  --with-mp               with multiple precision statistics
#                          auto|longlong|long|bignum|gmp [auto]
#  --with-odbc             with specific ODBC support
#                          iodbc|unixodbc|odbc32|auto [auto]
--with-odbc=unixodbc
#  --with-argon2           with argon2 support library auto|libsodium|libargon2 [auto]
--with-argon2=libargon2
#  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
#                          both]
#  --with-aix-soname=aix|svr4|both
#                          shared library versioning (aka "SONAME") variant to
#                          provide on AIX, [default=aix].
#  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
#  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
#                          compiler's sysroot if not specified).
#
#See INSTALL file for further details.
#
#Some influential environment variables:
#  CC          C compiler command
#  CFLAGS      C compiler flags
#  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
#              nonstandard directory <lib dir>
#  LIBS        libraries to pass to the linker, e.g. -l<library>
#  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
#              you have headers in a nonstandard directory <include dir>
#  LT_SYS_LIBRARY_PATH
#              User-defined run-time library search path.
#  CPP         C preprocessor
#  PKG_CONFIG  path to pkg-config utility
#  PKG_CONFIG_PATH
#              directories to add to pkg-config's search path
#  PKG_CONFIG_LIBDIR
#              path overriding pkg-config's built-in search path
#  WT_CFLAGS   C compiler flags for WT, overriding pkg-config
#  WT_LIBS     linker flags for WT, overriding pkg-config
#  systemdsystemunitdir
#              value of systemdsystemunitdir for systemd, overriding pkg-config
#
#Use these variables to override the choices made by `configure' or to help
#it to find libraries and programs with nonstandard names/locations.
#
#Report bugs to the package provider.
